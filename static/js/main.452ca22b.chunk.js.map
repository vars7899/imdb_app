{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Card/Card.js","components/Complete/Complete.js","components/TypeHeading/TypeHeading.js","components/Header/Header.js","components/NominatedCard/NominatedCard.js","components/Nominated/Nominated.js","App.js","index.js"],"names":["state","action","type","nominate","payload","filter","movie","imdbID","intialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToNominate","removeMovieFromNominate","children","Card","useContext","nominateDisabled","find","o","className","Poster","src","alt","Title","substring","Year","style","marginRight","length","disabled","onClick","Complete","color","textAlign","TypeHeading","heading","Header","useState","checkLoading","setCheckLoading","query","setQuery","results","setResults","confetti","setConfetti","setTimeout","onChange","e","preventDefault","target","fetch","process","then","response","json","responseData","Error","Search","catch","err","console","log","placeholder","width","height","numberOfPieces","map","NominatedCard","Nominated","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.452ca22b.chunk.js","sourcesContent":["export default (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_MOVIE_TO_NOMINATE\":\r\n            return {\r\n                ...state,\r\n                nominate: [action.payload, ...state.nominate],\r\n            };\r\n        case \"REMOVE_MOVIE_FROM_NOMINATE\":\r\n            return {\r\n                ...state,\r\n                nominate: state.nominate.filter(\r\n                    (movie) => movie.imdbID !== action.payload\r\n                ),\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer.js\";\r\n\r\n//intial state\r\nconst intialState = {\r\n    nominate: localStorage.getItem(\"nominate\")\r\n        ? JSON.parse(localStorage.getItem(\"nominate\"))\r\n        : [],\r\n};\r\n\r\n//create contex\r\nexport const GlobalContext = createContext(intialState);\r\n\r\n//provider\r\nexport const GlobalProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AppReducer, intialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"nominate\", JSON.stringify(state.nominate));\r\n    }, [state]);\r\n\r\n    //actions\r\n    const addMovieToNominate = (movie) => {\r\n        dispatch({ type: \"ADD_MOVIE_TO_NOMINATE\", payload: movie });\r\n    };\r\n\r\n    const removeMovieFromNominate = (imdbID) => {\r\n        dispatch({ type: \"REMOVE_MOVIE_FROM_NOMINATE\", payload: imdbID });\r\n    };\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                nominate: state.nominate,\r\n                addMovieToNominate,\r\n                removeMovieFromNominate,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { AiFillCalendar } from \"react-icons/ai\";\r\nconst Card = ({ movie }) => {\r\n    const { addMovieToNominate, nominate } = useContext(GlobalContext);\r\n\r\n    let storedMovie = nominate.find((o) => o.imdbID === movie.imdbID);\r\n\r\n    const nominateDisabled = storedMovie ? true : false;\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            {movie.Poster ? (\r\n                <img\r\n                    className=\"card__pic\"\r\n                    src={movie.Poster}\r\n                    alt={movie.Title}\r\n                />\r\n            ) : (\r\n                <div className=\"card__empty\"></div>\r\n            )}\r\n            <div className=\"card__info\">\r\n                <p className=\"card__info__title\">\r\n                    {movie.Title.substring(0, 45)}\r\n                </p>\r\n                {movie.Year ? (\r\n                    <p className=\"card__info__year\">\r\n                        <AiFillCalendar style={{ marginRight: \"5px\" }} />\r\n                        {movie.Year}\r\n                    </p>\r\n                ) : (\r\n                    <p className=\"card__info__year__not\">Not Available</p>\r\n                )}\r\n            </div>\r\n            {nominate.length === 5 ? (\r\n                <div className=\"card__controls\">\r\n                    <button disabled={true} className=\"btn nominate\">\r\n                        Nominate\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"card__controls\">\r\n                    <button\r\n                        disabled={nominateDisabled}\r\n                        className=\"btn nominate\"\r\n                        onClick={() => addMovieToNominate(movie)}\r\n                    >\r\n                        Nominate\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nconst Complete = () => {\r\n    return (\r\n        <>\r\n            <p style={{ color: \"green\", textAlign: \"center\" }}>\r\n                Task Completed\r\n            </p>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Complete;\r\n","import React from \"react\";\r\n\r\nconst TypeHeading = (props) => {\r\n    return (\r\n        <div>\r\n            <p className=\"heading\">{props.heading}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypeHeading;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport Card from \"../Card/Card\";\r\nimport Complete from \"../Complete/Complete\";\r\nimport TypeHeading from \"../TypeHeading/TypeHeading\";\r\nimport Confetti from \"react-confetti\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Header = () => {\r\n    const [checkLoading, setCheckLoading] = useState();\r\n    const [query, setQuery] = useState(\"\");\r\n    const [results, setResults] = useState([]);\r\n    const [confetti, setConfetti] = useState(true);\r\n    const { nominate } = useContext(GlobalContext);\r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n        setQuery(e.target.value);\r\n        setCheckLoading(true);\r\n        fetch(\r\n            `https://www.omdbapi.com/?s=${e.target.value}&apikey=${process.env.REACT_APP_IMDB_KEY}`\r\n        )\r\n            .then((response) => response.json())\r\n            .then((responseData) => {\r\n                if (!responseData.Error) {\r\n                    setResults(responseData.Search);\r\n                    setCheckLoading(false);\r\n                } else {\r\n                    setResults([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setCheckLoading(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n    setTimeout(() => setConfetti(false), 3000);\r\n    return (\r\n        <div className=\"header container-fluid\">\r\n            <div className=\"header__container\">\r\n                <p className=\"header__container__brand\">IMDB</p>\r\n                <div className=\"header__container__control\">\r\n                    <span className=\"header__container__icon\">\r\n                        <BiSearch />\r\n                    </span>\r\n                    <input\r\n                        className=\"header__container__input\"\r\n                        type=\"text\"\r\n                        value={query}\r\n                        onChange={onChange}\r\n                        placeholder=\"Search Movie\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {nominate.length === 5 && (\r\n                <>\r\n                    <Complete />\r\n                    {confetti && (\r\n                        <div className=\"confetti\">\r\n                            <Confetti\r\n                                width={\"300\"}\r\n                                height={\"400\"}\r\n                                numberOfPieces=\"50\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n            {checkLoading && query.length > 0 ? (\r\n                <div>\r\n                    <TypeHeading heading={\"Search result\"} />\r\n                    <div className=\"loading\">\r\n                        <Loader\r\n                            type=\"ThreeDots\"\r\n                            color=\"#FFF\"\r\n                            height={100}\r\n                            width={100}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                results.length > 0 && (\r\n                    <>\r\n                        <TypeHeading heading={\"Search result\"} />\r\n                        <ul className=\"header__movielist row\">\r\n                            {results.map((movie) => (\r\n                                <li className=\"element\" key={movie.imdbID}>\r\n                                    <Card movie={movie} />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nconst NominatedCard = ({ movie }) => {\r\n    const { removeMovieFromNominate } = useContext(GlobalContext);\r\n    return (\r\n        <div className=\"nominatedcard\">\r\n            {movie.Poster ? (\r\n                <img\r\n                    className=\"card__pic\"\r\n                    src={movie.Poster}\r\n                    alt={movie.Title}\r\n                />\r\n            ) : (\r\n                <div className=\"card__empty\"></div>\r\n            )}\r\n            <div className=\"card__info\">\r\n                <p className=\"card__info__title\">{movie.Title}</p>\r\n                {movie.Year ? (\r\n                    <p className=\"card__info__year\">Year: {movie.Year}</p>\r\n                ) : (\r\n                    <p className=\"card__info__year__not\">Not Available</p>\r\n                )}\r\n            </div>\r\n            <div className=\"card__controls\">\r\n                <button\r\n                    className=\"btn remove\"\r\n                    onClick={() => removeMovieFromNominate(movie.imdbID)}\r\n                >\r\n                    Remove\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NominatedCard;\r\n","import React, { useContext } from \"react\";\r\nimport NominatedCard from \"../NominatedCard/NominatedCard\";\r\nimport TypeHeading from \"../TypeHeading/TypeHeading\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nconst Nominated = () => {\r\n    const { nominate } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div>\r\n            <TypeHeading heading={\"Nominated\"} />\r\n            {nominate.length > 0 ? (\r\n                <div className=\"nominated row\">\r\n                    {nominate.map((movie) => (\r\n                        <NominatedCard key={movie.imdbID} movie={movie} />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p className=\"color\">No movie Nominated</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nominated;\r\n","import { GlobalProvider } from \"./context/GlobalState\";\nimport Header from \"./components/Header/Header\";\nimport Nominated from \"./components/Nominated/Nominated\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <GlobalProvider>\n            <div className=\"app\">\n                <Header />\n                <Nominated />\n            </div>\n        </GlobalProvider>\n    );\n}\n// }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}